<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.gauge.mapper.PsyGaugeQuestionsResultMapper">

    <resultMap type="com.ruoyi.gauge.domain.PsyGaugeQuestionsResult" id="PsyGaugeQuestionsResultResult">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="gaugeId" column="gauge_id"/>
        <result property="questionsId" column="questions_id"/>
        <result property="questionsOptionsId" column="questions_options_id"/>
        <result property="score" column="score"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="selectPsyGaugeQuestionsResultVo">
        select id, user_id, gauge_id, questions_id, questions_options_id, score, create_time
        from psy_gauge_questions_result
    </sql>

    <select id="selectPsyGaugeQuestionsResultList" parameterType="com.ruoyi.gauge.domain.PsyGaugeQuestionsResult"
            resultMap="PsyGaugeQuestionsResultResult">
        <include refid="selectPsyGaugeQuestionsResultVo"/>
        <where>
            <if test="userId != null  and userId != ''">and user_id = #{userId}</if>
            <if test="gaugeId != null ">and gauge_id = #{gaugeId}</if>
            <if test="questionsId != null ">and questions_id = #{questionsId}</if>
            <if test="questionsOptionsId != null ">and questions_options_id = #{questionsOptionsId}</if>
            <if test="score != null  and score != ''">and score = #{score}</if>
        </where>
    </select>

    <select id="selectPsyGaugeQuestionsResultById" parameterType="Long" resultMap="PsyGaugeQuestionsResultResult">
        <include refid="selectPsyGaugeQuestionsResultVo"/>
        where id = #{id}
    </select>

    <insert id="insertPsyGaugeQuestionsResult" parameterType="com.ruoyi.gauge.domain.PsyGaugeQuestionsResult"
            useGeneratedKeys="true" keyProperty="id">
        insert into psy_gauge_questions_result
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="gaugeId != null">gauge_id,</if>
            <if test="questionsId != null">questions_id,</if>
            <if test="questionsOptionsId != null">questions_options_id,</if>
            <if test="score != null">score,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="gaugeId != null">#{gaugeId},</if>
            <if test="questionsId != null">#{questionsId},</if>
            <if test="questionsOptionsId != null">#{questionsOptionsId},</if>
            <if test="score != null">#{score},</if>
            <if test="createTime != null">#{createTime},</if>
        </trim>
    </insert>

    <update id="updatePsyGaugeQuestionsResult" parameterType="com.ruoyi.gauge.domain.PsyGaugeQuestionsResult">
        update psy_gauge_questions_result
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="gaugeId != null">gauge_id = #{gaugeId},</if>
            <if test="questionsId != null">questions_id = #{questionsId},</if>
            <if test="questionsOptionsId != null">questions_options_id = #{questionsOptionsId},</if>
            <if test="score != null">score = #{score},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deletePsyGaugeQuestionsResultById" parameterType="Long">
        delete
        from psy_gauge_questions_result
        where id = #{id}
    </delete>

    <delete id="deletePsyGaugeQuestionsResultByIds" parameterType="String">
        delete from psy_gauge_questions_result where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <insert id="batchInsert">
        insert into psy_gauge_questions_result
        (user_id,
        question_id,
        option_id,
        value,
        create_time,
        order_id)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.userId},#{item.questionsId},#{item.questionsOptionsId},#{item.score},#{item.createTime},#{item.orderId})
        </foreach>
    </insert>


    <delete id="deleteResult">
        delete
        from psy_gauge_questions_result
        where user_id = #{userId}
          and question_id = #{questionsId}
          and order_id = #{orderId}
    </delete>

    <select id="getSimpleResultByScores" resultType="java.lang.String">
        SELECT pgss.result
        FROM psy_gauge_score_setting pgss
                 INNER JOIN (SELECT SUM(result.value) as score,
                                    po.gauge_id,
                                    po.order_id
                             FROM psy_gauge_questions_result result
                                      LEFT JOIN psy_order po ON result.order_id = po.order_id
                             WHERE result.user_id = #{userId}
                               AND result.order_id = #{orderId}
                             GROUP BY po.order_id, po.gauge_id) tmp ON tmp.gauge_id = pgss.gauge_id
        WHERE tmp.score >= pgss.`start`
          AND pgss.`end` >= tmp.score
        limit 1
    </select>
</mapper>