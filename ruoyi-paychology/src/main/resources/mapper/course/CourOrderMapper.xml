<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.course.mapper.CourOrderMapper">
    
    <resultMap type="CourOrder" id="CourOrderResult">
        <result property="id"    column="id"    />
        <result property="orderId"    column="order_id"    />
        <result property="createTime"    column="create_time"    />
        <result property="status"    column="status"    />
        <result property="userId"    column="user_id"    />
        <result property="amount"    column="amount"    />
        <result property="courseId"    column="course_id"    />
    </resultMap>

    <sql id="selectCourOrderVo">
        select id, order_id, create_time, status, user_id, amount, course_id from cour_order
    </sql>

    <select id="selectCourOrderList" parameterType="CourOrder" resultMap="CourOrderResult">
        <include refid="selectCourOrderVo"/>
        <where>  
            <if test="orderId != null  and orderId != ''"> and order_id = #{orderId}</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="userId != null  and userId != '' "> and user_id = #{userId}</if>
            <if test="amount != null "> and amount = #{amount}</if>
            <if test="courseId != null  and courseId != ''"> and course_id = #{courseId}</if>
        </where>
    </select>

    <select id="selectCourOrderById" parameterType="Integer" resultMap="CourOrderResult">
        <include refid="selectCourOrderVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertCourOrder" parameterType="CourOrder" useGeneratedKeys="true" keyProperty="id">
        insert into cour_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">order_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="status != null">status,</if>
            <if test="userId != null and userId != ''">user_id,</if>
            <if test="amount != null">amount,</if>
            <if test="courseId != null and courseId != ''">course_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">#{orderId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="status != null">#{status},</if>
            <if test="userId != null and userId != ''">#{userId},</if>
            <if test="amount != null">#{amount},</if>
            <if test="courseId != null and courseId != ''">#{courseId},</if>
         </trim>
    </insert>

    <update id="updateCourOrder" parameterType="CourOrder">
        update cour_order
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">order_id = #{orderId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="status != null">status = #{status},</if>
            <if test="userId != null and userId != ''">user_id = #{userId},</if>
            <if test="amount != null">amount = #{amount},</if>
            <if test="courseId != null and courseId != ''">course_id = #{courseId},</if>
        </trim>
        <trim prefix="where" prefixOverrides="and">
            <if test="id != null">and id = #{id}</if>
            <if test="orderId != null">and order_id = #{orderId}</if>
        </trim>
    </update>

    <delete id="deleteCourOrderById" parameterType="Integer">
        delete from cour_order where id = #{id}
    </delete>

    <delete id="deleteCourOrderByIds" parameterType="String">
        delete from cour_order where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getOrderDetailByOrderId" parameterType="String" resultType="com.ruoyi.course.vo.OrderVO">
        select co.id, co.order_id, co.status, co.user_id, co.amount as amount, co.course_id, pop.pay_status , pop.amount as pay_amount
        from cour_order co
        left join psy_order_pay pop
        on co.id = pop.order_id
        where co.order_id = #{orderId}
    </select>
</mapper>